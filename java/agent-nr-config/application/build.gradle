plugins {
    id 'java-library'
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'de.undercouch.download' version '4.1.1'
}

def agentPath = project.buildDir.toString() + "/otel/opentelemetry-javaagent-all-${project['otel-agent.version']}.jar"

bootRun {
  mainClass.set 'com.newrelic.app.Application'

  // Before running, build the config-extension shadow jar
  dependsOn(":agent-nr-config:config-extension:shadowJar")
  // Before running, download the opentelemetry-java-instrumentation agent
  dependsOn("downloadAgent")

  def extensionPath = project(":agent-nr-config:config-extension").buildDir.toString() + "/libs/config-extension.jar"

  jvmArgs = [
      // Set the opentelemetry-java-instrumentation agent as the javaagent
      "-javaagent:${agentPath}",
      // Use the config-extension shadowJar to configure the agent via SPI
      "-Dotel.javaagent.extensions=${extensionPath}"
  ]
}

// Download the opentelemetry java agent and put it in the build directory
task downloadAgent(type: Download) {
  src "https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v${project['otel-agent.version']}/opentelemetry-javaagent.jar"
  dest agentPath
  overwrite false
}

configurations.all {
  exclude module: 'spring-boot-starter-logging'
}
// Force upgrade to appease snyk
ext['spring-framework.version'] = '5.3.20'

dependencies {
  implementation 'io.opentelemetry:opentelemetry-api'

  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-log4j2'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
}