---
# Store the agent YAML config as a ConfigMap, to be mounted into a volume on the agent containers.
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-agent-conf
  namespace: otel-samples
  labels:
    app: opentelemetry
    component: otel-agent-conf
data:
  otel-agent-config: |
    receivers:
      otlp:
        protocols:
          grpc:
    exporters:
      logging:
        logLevel: DEBUG
      # loadbalancing exporter will consistently export spans with the same trace to the same hosts,
      # which we register below with the hosts of the collector stateful set. This enables tail based
      # sampling because all spans for a given trace are processed in the same host.
      loadbalancing:
        protocol:
          otlp:
            insecure: true
        resolver:
          static:
            hostnames:
            # Note: if the number of replicas in the collector stateful set is changed, the hosts must
            # be updated here.
            - otel-collector-0.otel-collector.otel-samples.svc.cluster.local:4317
            - otel-collector-1.otel-collector.otel-samples.svc.cluster.local:4317
    extensions:
      health_check: {}
    service:
      extensions: [health_check]
      pipelines:
        metrics:
          receivers: [otlp]
          exporters: [logging]
        traces:
          receivers: [otlp]
          exporters: [logging, loadbalancing]
---
# Run the agent as a DaemonSet so that an agent is running on each node.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: otel-agent
  namespace: otel-samples
  labels:
    app: opentelemetry
    component: otel-agent
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-agent
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-agent
    spec:
      hostNetwork: true                   # Allow processes running on the same host to communicate with the agent .
      dnsPolicy: ClusterFirstWithHostNet  # Allow the agent to communicate with cluster, and reach the collector.
      containers:
        - command:
            - "/otelcontribcol"
            - "--config=/conf/otel-agent-config.yaml"
          image: otel/opentelemetry-collector-contrib:0.33.0
          name: otel-agent
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 4317
              hostPort: 4317
          volumeMounts:
            - name: otel-agent-config-vol
              mountPath: /conf
          livenessProbe:
            httpGet:
              path: /
              port: 13133 # Health Check extension default port.
          readinessProbe:
            httpGet:
              path: /
              port: 13133 # Health Check extension default port.
      volumes:
        - configMap:
            name: otel-agent-conf
            items:
              - key: otel-agent-config
                path: otel-agent-config.yaml
          name: otel-agent-config-vol