
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-config
  namespace: nr-host-monitoring
  labels:
    app.kubernetes.io/name: collector-config
data:
  collector-config: |
    receivers:
      hostmetrics:
        root_path: /hostfs
        # Default collection interval is 60s. Lower if you need finer granularity.
        collection_interval: 60s
        scrapers:
          cpu:
            metrics:
              system.cpu.utilization:
                enabled: true
          load:
          memory:
            metrics:
              system.memory.utilization:
                enabled: true
          disk:
          filesystem:
            metrics:
              system.filesystem.utilization:
                enabled: true
            # Reading /containers/services causes error running in docker.
            # Delete for production deployments.
            exclude_mount_points:
              mount_points: ["/containers/services"]
              match_type: strict
          network:
          paging:
            metrics:
              system.paging.utilization:
                enabled: true
          # Uncomment to enable process metrics, which can be noisy but valuable.
          # processes:
          # process:
          #  metrics:
          #    process.cpu.utilization:
          #      enabled: true
          #    process.cpu.time:
          #      enabled: false
          # Mute various errors reading process metrics running locally in docker.
          # Delete for production deployments.
          #   mute_process_exe_error: true
          #   mute_process_user_error: true
          #   mute_process_io_error: true
    
      filelog:
        include:
          - /var/log/alternatives.log
          - /var/log/cloud-init.log
          - /var/log/auth.log
          - /var/log/dpkg.log
          - /var/log/syslog
          - /var/log/messages
          - /var/log/secure
          - /var/log/yum.log
      
      otlp:
        protocols:
          http:
          grpc:
    
    processors:
      batch:
    
      cumulativetodelta:
    
      transform:
        metric_statements:
          - context: metric
            statements:
              - set(description, "")
              - set(unit, "")
    
      resourcedetection:
        detectors: ["env", "system"]
        system:
          hostname_sources: ["os"]
          resource_attributes:
            host.id:
              enabled: true
    
      resourcedetection/cloud:
        detectors: ["gcp", "ec2", "azure"]
        timeout: 2s
        override: false

    exporters:
      logging:
        verbosity: detailed
      otlphttp:
        endpoint: ${NEW_RELIC_OTLP_ENDPOINT}
        headers:
          api-key: ${NEW_RELIC_API_KEY}

    service:
      pipelines:
        metrics/host:
          receivers: [hostmetrics]
          processors: [resourcedetection, resourcedetection/cloud, transform, cumulativetodelta, batch]
          exporters: [otlphttp]
        logs/host:
          receivers: [filelog]
          processors: [resourcedetection, resourcedetection/cloud, batch]
          exporters: [logging, otlphttp]
        traces:
          receivers: [otlp]
          processors: [resourcedetection, resourcedetection/cloud, batch]
          exporters: [otlphttp]
        metrics:
          receivers: [otlp]
          processors: [resourcedetection, resourcedetection/cloud, batch]
          exporters: [otlphttp]
        logs:
          receivers: [otlp]
          processors: [resourcedetection, resourcedetection/cloud, batch]
          exporters: [otlphttp]
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: collector
  namespace: nr-host-monitoring
  labels:
    app.kubernetes.io/name: collector
spec:
  selector:
    matchLabels:
      name: collector
  template:
    metadata:
      labels:
        name: collector
    spec:
      containers:
        - name: collector
          image: otel/opentelemetry-collector-contrib:0.98.0
          env:
            # The default US endpoint is set here. You can change the endpoint and port based on your requirements if needed.
            # docs: https://docs.newrelic.com/docs/more-integrations/open-source-telemetry-integrations/opentelemetry/best-practices/opentelemetry-otlp/#configure-endpoint-port-protocol
            - name: NEW_RELIC_OTLP_ENDPOINT
              value: https://otlp.nr-data.net/
            # The New Relic API key used to authenticate export requests.
            # Defined in secrets.yaml
            - name: NEW_RELIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: nr-host-monitoring-secret
                  key: NEW_RELIC_API_KEY
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # host.id is required for NewRelic host entity synthesis and relationships, but is not included by any resourcedetection detector when running with docker on macOS.
            # We enabled the "env" resource detector and set host.id to the name of the node via env var.
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: host.id=$(NODE_NAME)
          volumeMounts:
            - name: collector-config-vol
              mountPath: /etc/otelcol-contrib
            - name: hostfs
              mountPath: /hostfs
              readOnly: true
              mountPropagation: HostToContainer
          ports:
            - containerPort: 4318
              hostPort: 4318
      volumes:
        - name: collector-config-vol
          configMap:
            name: collector-config
            items:
              - key: collector-config
                path: config.yaml
        - name: hostfs
          hostPath:
            path: /
